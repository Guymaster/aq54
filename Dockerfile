# build step
FROM node:alpine as build
WORKDIR /app
COPY package.json ./
COPY create-env-file.sh ./create-env-file.sh

ARG REACT_APP_API_HOST
RUN sh create-env-file.sh REACT_APP_API_HOST=$REACT_APP_API_HOST

ARG REACT_APP_API_PORT
RUN sh create-env-file.sh REACT_APP_API_PORT=$REACT_APP_API_PORT

ARG REACT_APP_MAPBOX_TOKEN
RUN sh create-env-file.sh REACT_APP_MAPBOX_TOKEN=$REACT_APP_MAPBOX_TOKEN

ARG REACT_APP_FIREBASE_API_KEY
RUN sh create-env-file.sh REACT_APP_FIREBASE_API_KEY=$REACT_APP_FIREBASE_API_KEY

ARG REACT_APP_FIREBASE_AUTH_DOMAIN
RUN sh create-env-file.sh REACT_APP_FIREBASE_AUTH_DOMAIN=$REACT_APP_FIREBASE_AUTH_DOMAIN

ARG REACT_APP_FIREBASE_PROJECT_ID
RUN sh create-env-file.sh REACT_APP_FIREBASE_PROJECT_ID=$REACT_APP_FIREBASE_PROJECT_ID

ARG REACT_APP_FIREBASE_STORAGE_BUCKET
RUN sh create-env-file.sh REACT_APP_FIREBASE_STORAGE_BUCKET=$REACT_APP_FIREBASE_STORAGE_BUCKET

ARG REACT_APP_FIREBASE_MESSAGING_SENDER_ID
RUN sh create-env-file.sh REACT_APP_FIREBASE_MESSAGING_SENDER_ID=$REACT_APP_FIREBASE_MESSAGING_SENDER_ID

ARG REACT_APP_FIREBASE_APP_ID
RUN sh create-env-file.sh REACT_APP_FIREBASE_APP_ID=$REACT_APP_FIREBASE_APP_ID

ARG REACT_APP_FIREBASE_MEASUREMENT_ID
RUN sh create-env-file.sh REACT_APP_FIREBASE_MEASUREMENT_ID=$REACT_APP_FIREBASE_MEASUREMENT_ID

RUN npm install
COPY . ./
RUN npm run build

# release step
FROM nginx:alpine as release
COPY --from=build /app/build /usr/share/nginx/html/
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=build /app/build /usr/share/nginx/html/myreactappenter
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]